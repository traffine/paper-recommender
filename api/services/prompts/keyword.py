from core.config import N_KW_EXTRACT
from core.keyword import KEYWORDS


def keyword_prompt(user_input: str) -> str:
    prompt = f"""
    <命令>
    - <入力文>について、<キーワード一覧>の中マッチするものをコンマで繋げて「最も合致しているキーワードだけ」を「{N_KW_EXTRACT}個以内」で返してください。マッチするものというのは、以下の条件を満たすものです。
        - <入力文>を「日本語」として解釈してください。
            - 他の言語ではなく、日本語的な意味の近さで判断してください。
        - 類語・同意語を「マッチする」と判断してください。
        - 以下の例に従って、表記揺れや類語を拾うようにしてください。
            - 例：移動時間→交通時間
    - マッチするキーワードがなければ何も返さないでください。
    - 上記の命令を満たすように、<思考ステップ>に沿って処理を行ってください。

    <思考ステップ>
    1. <入力文>を「日本語」として解析して、単語・フレーズに分割する。
    2. 抽出した単語・フレーズを元に、<キーワード一覧>の中からマッチするものを探す。
    3. 抽出したキーワードを合致している順にコンマで繋げて返し、何もなければ何も返さない。

    <キーワード一覧>
    {", ".join(KEYWORDS)}

    <入力文>
    {user_input}

    <出力例>
    keyword1, keyword2, keyword3
    """
    return prompt


def negative_keyword_prompt(user_input: str, keywords: list[str]) -> str:
    prompt = f"""
    <入力文>について、<キーワード候補一覧>の中で嫌いであったりネガティブな表現がされているものをコンマで繋げて全て返してください。
    マッチするキーワードがなければ何も返さないでください。

    <キーワード候補一覧>
    {", ".join(keywords)}

    <入力文>
    {user_input}

    <出力例>
    公共交通, 走行実験
    """
    return prompt
